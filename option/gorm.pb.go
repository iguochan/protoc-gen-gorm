// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: gorm.proto

package option

import (
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IntType int32

const (
	IntType_tinyint   IntType = 0
	IntType_smallint  IntType = 1
	IntType_mediumint IntType = 2
	IntType_int       IntType = 3
	IntType_bigint    IntType = 4
)

// Enum value maps for IntType.
var (
	IntType_name = map[int32]string{
		0: "tinyint",
		1: "smallint",
		2: "mediumint",
		3: "int",
		4: "bigint",
	}
	IntType_value = map[string]int32{
		"tinyint":   0,
		"smallint":  1,
		"mediumint": 2,
		"int":       3,
		"bigint":    4,
	}
)

func (x IntType) Enum() *IntType {
	p := new(IntType)
	*p = x
	return p
}

func (x IntType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IntType) Descriptor() protoreflect.EnumDescriptor {
	return file_gorm_proto_enumTypes[0].Descriptor()
}

func (IntType) Type() protoreflect.EnumType {
	return &file_gorm_proto_enumTypes[0]
}

func (x IntType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IntType.Descriptor instead.
func (IntType) EnumDescriptor() ([]byte, []int) {
	return file_gorm_proto_rawDescGZIP(), []int{0}
}

type FloatType int32

const (
	FloatType_float   FloatType = 0
	FloatType_double  FloatType = 1
	FloatType_decimal FloatType = 2
)

// Enum value maps for FloatType.
var (
	FloatType_name = map[int32]string{
		0: "float",
		1: "double",
		2: "decimal",
	}
	FloatType_value = map[string]int32{
		"float":   0,
		"double":  1,
		"decimal": 2,
	}
)

func (x FloatType) Enum() *FloatType {
	p := new(FloatType)
	*p = x
	return p
}

func (x FloatType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FloatType) Descriptor() protoreflect.EnumDescriptor {
	return file_gorm_proto_enumTypes[1].Descriptor()
}

func (FloatType) Type() protoreflect.EnumType {
	return &file_gorm_proto_enumTypes[1]
}

func (x FloatType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FloatType.Descriptor instead.
func (FloatType) EnumDescriptor() ([]byte, []int) {
	return file_gorm_proto_rawDescGZIP(), []int{1}
}

type TimeType int32

const (
	TimeType_datetime  TimeType = 0
	TimeType_date      TimeType = 1
	TimeType_timestamp TimeType = 2
)

// Enum value maps for TimeType.
var (
	TimeType_name = map[int32]string{
		0: "datetime",
		1: "date",
		2: "timestamp",
	}
	TimeType_value = map[string]int32{
		"datetime":  0,
		"date":      1,
		"timestamp": 2,
	}
)

func (x TimeType) Enum() *TimeType {
	p := new(TimeType)
	*p = x
	return p
}

func (x TimeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeType) Descriptor() protoreflect.EnumDescriptor {
	return file_gorm_proto_enumTypes[2].Descriptor()
}

func (TimeType) Type() protoreflect.EnumType {
	return &file_gorm_proto_enumTypes[2]
}

func (x TimeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeType.Descriptor instead.
func (TimeType) EnumDescriptor() ([]byte, []int) {
	return file_gorm_proto_rawDescGZIP(), []int{2}
}

type BinaryType int32

const (
	BinaryType_binary     BinaryType = 0
	BinaryType_varbinary  BinaryType = 1
	BinaryType_tinyblob   BinaryType = 2
	BinaryType_blob       BinaryType = 3
	BinaryType_mediumblob BinaryType = 4
	BinaryType_longblob   BinaryType = 5
)

// Enum value maps for BinaryType.
var (
	BinaryType_name = map[int32]string{
		0: "binary",
		1: "varbinary",
		2: "tinyblob",
		3: "blob",
		4: "mediumblob",
		5: "longblob",
	}
	BinaryType_value = map[string]int32{
		"binary":     0,
		"varbinary":  1,
		"tinyblob":   2,
		"blob":       3,
		"mediumblob": 4,
		"longblob":   5,
	}
)

func (x BinaryType) Enum() *BinaryType {
	p := new(BinaryType)
	*p = x
	return p
}

func (x BinaryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BinaryType) Descriptor() protoreflect.EnumDescriptor {
	return file_gorm_proto_enumTypes[3].Descriptor()
}

func (BinaryType) Type() protoreflect.EnumType {
	return &file_gorm_proto_enumTypes[3]
}

func (x BinaryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BinaryType.Descriptor instead.
func (BinaryType) EnumDescriptor() ([]byte, []int) {
	return file_gorm_proto_rawDescGZIP(), []int{3}
}

type StringType int32

const (
	StringType_char       StringType = 0
	StringType_varchar    StringType = 1
	StringType_tinytext   StringType = 2
	StringType_text       StringType = 3
	StringType_mediumtext StringType = 4
	StringType_longtext   StringType = 5
)

// Enum value maps for StringType.
var (
	StringType_name = map[int32]string{
		0: "char",
		1: "varchar",
		2: "tinytext",
		3: "text",
		4: "mediumtext",
		5: "longtext",
	}
	StringType_value = map[string]int32{
		"char":       0,
		"varchar":    1,
		"tinytext":   2,
		"text":       3,
		"mediumtext": 4,
		"longtext":   5,
	}
)

func (x StringType) Enum() *StringType {
	p := new(StringType)
	*p = x
	return p
}

func (x StringType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StringType) Descriptor() protoreflect.EnumDescriptor {
	return file_gorm_proto_enumTypes[4].Descriptor()
}

func (StringType) Type() protoreflect.EnumType {
	return &file_gorm_proto_enumTypes[4]
}

func (x StringType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StringType.Descriptor instead.
func (StringType) EnumDescriptor() ([]byte, []int) {
	return file_gorm_proto_rawDescGZIP(), []int{4}
}

type EnumType int32

const (
	EnumType_enum   EnumType = 0 // 如果后续新增枚举值，可能需要改表，这往往得不偿失，慎用
	EnumType_int32  EnumType = 1
	EnumType_string EnumType = 2
)

// Enum value maps for EnumType.
var (
	EnumType_name = map[int32]string{
		0: "enum",
		1: "int32",
		2: "string",
	}
	EnumType_value = map[string]int32{
		"enum":   0,
		"int32":  1,
		"string": 2,
	}
)

func (x EnumType) Enum() *EnumType {
	p := new(EnumType)
	*p = x
	return p
}

func (x EnumType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumType) Descriptor() protoreflect.EnumDescriptor {
	return file_gorm_proto_enumTypes[5].Descriptor()
}

func (EnumType) Type() protoreflect.EnumType {
	return &file_gorm_proto_enumTypes[5]
}

func (x EnumType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnumType.Descriptor instead.
func (EnumType) EnumDescriptor() ([]byte, []int) {
	return file_gorm_proto_rawDescGZIP(), []int{5}
}

type TimeUnit int32

const (
	TimeUnit_s  TimeUnit = 0
	TimeUnit_ms TimeUnit = 1
	TimeUnit_us TimeUnit = 2
	TimeUnit_ns TimeUnit = 3
)

// Enum value maps for TimeUnit.
var (
	TimeUnit_name = map[int32]string{
		0: "s",
		1: "ms",
		2: "us",
		3: "ns",
	}
	TimeUnit_value = map[string]int32{
		"s":  0,
		"ms": 1,
		"us": 2,
		"ns": 3,
	}
)

func (x TimeUnit) Enum() *TimeUnit {
	p := new(TimeUnit)
	*p = x
	return p
}

func (x TimeUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_gorm_proto_enumTypes[6].Descriptor()
}

func (TimeUnit) Type() protoreflect.EnumType {
	return &file_gorm_proto_enumTypes[6]
}

func (x TimeUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeUnit.Descriptor instead.
func (TimeUnit) EnumDescriptor() ([]byte, []int) {
	return file_gorm_proto_rawDescGZIP(), []int{6}
}

type Rules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColumnName *string `protobuf:"bytes,1,opt,name=column_name,json=columnName,proto3,oneof" json:"column_name,omitempty"`
	// Types that are assignable to Type:
	//	*Rules_Bool
	//	*Rules_Int
	//	*Rules_Float
	//	*Rules_Time
	//	*Rules_Binary
	//	*Rules_String_
	//	*Rules_Enum
	Type isRules_Type `protobuf_oneof:"type"`
	// Types that are assignable to Idx:
	//	*Rules_PrimaryKey
	//	*Rules_UniqueIndex
	//	*Rules_Index
	Idx     isRules_Idx `protobuf_oneof:"idx"`
	NotNull *bool       `protobuf:"varint,12,opt,name=not_null,json=notNull,proto3,oneof" json:"not_null,omitempty"`
}

func (x *Rules) Reset() {
	*x = Rules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rules) ProtoMessage() {}

func (x *Rules) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rules.ProtoReflect.Descriptor instead.
func (*Rules) Descriptor() ([]byte, []int) {
	return file_gorm_proto_rawDescGZIP(), []int{0}
}

func (x *Rules) GetColumnName() string {
	if x != nil && x.ColumnName != nil {
		return *x.ColumnName
	}
	return ""
}

func (m *Rules) GetType() isRules_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Rules) GetBool() *BoolRules {
	if x, ok := x.GetType().(*Rules_Bool); ok {
		return x.Bool
	}
	return nil
}

func (x *Rules) GetInt() *IntRules {
	if x, ok := x.GetType().(*Rules_Int); ok {
		return x.Int
	}
	return nil
}

func (x *Rules) GetFloat() *FloatRules {
	if x, ok := x.GetType().(*Rules_Float); ok {
		return x.Float
	}
	return nil
}

func (x *Rules) GetTime() *TimeRules {
	if x, ok := x.GetType().(*Rules_Time); ok {
		return x.Time
	}
	return nil
}

func (x *Rules) GetBinary() *BinaryRules {
	if x, ok := x.GetType().(*Rules_Binary); ok {
		return x.Binary
	}
	return nil
}

func (x *Rules) GetString_() *StringRules {
	if x, ok := x.GetType().(*Rules_String_); ok {
		return x.String_
	}
	return nil
}

func (x *Rules) GetEnum() *EnumRules {
	if x, ok := x.GetType().(*Rules_Enum); ok {
		return x.Enum
	}
	return nil
}

func (m *Rules) GetIdx() isRules_Idx {
	if m != nil {
		return m.Idx
	}
	return nil
}

func (x *Rules) GetPrimaryKey() bool {
	if x, ok := x.GetIdx().(*Rules_PrimaryKey); ok {
		return x.PrimaryKey
	}
	return false
}

func (x *Rules) GetUniqueIndex() *IndexRules {
	if x, ok := x.GetIdx().(*Rules_UniqueIndex); ok {
		return x.UniqueIndex
	}
	return nil
}

func (x *Rules) GetIndex() *IndexRules {
	if x, ok := x.GetIdx().(*Rules_Index); ok {
		return x.Index
	}
	return nil
}

func (x *Rules) GetNotNull() bool {
	if x != nil && x.NotNull != nil {
		return *x.NotNull
	}
	return false
}

type isRules_Type interface {
	isRules_Type()
}

type Rules_Bool struct {
	Bool *BoolRules `protobuf:"bytes,2,opt,name=bool,proto3,oneof"`
}

type Rules_Int struct {
	Int *IntRules `protobuf:"bytes,3,opt,name=int,proto3,oneof"`
}

type Rules_Float struct {
	Float *FloatRules `protobuf:"bytes,4,opt,name=float,proto3,oneof"`
}

type Rules_Time struct {
	Time *TimeRules `protobuf:"bytes,5,opt,name=time,proto3,oneof"`
}

type Rules_Binary struct {
	Binary *BinaryRules `protobuf:"bytes,6,opt,name=binary,proto3,oneof"`
}

type Rules_String_ struct {
	String_ *StringRules `protobuf:"bytes,7,opt,name=string,proto3,oneof"`
}

type Rules_Enum struct {
	Enum *EnumRules `protobuf:"bytes,8,opt,name=enum,proto3,oneof"`
}

func (*Rules_Bool) isRules_Type() {}

func (*Rules_Int) isRules_Type() {}

func (*Rules_Float) isRules_Type() {}

func (*Rules_Time) isRules_Type() {}

func (*Rules_Binary) isRules_Type() {}

func (*Rules_String_) isRules_Type() {}

func (*Rules_Enum) isRules_Type() {}

type isRules_Idx interface {
	isRules_Idx()
}

type Rules_PrimaryKey struct {
	PrimaryKey bool `protobuf:"varint,9,opt,name=primary_key,json=primaryKey,proto3,oneof"`
}

type Rules_UniqueIndex struct {
	UniqueIndex *IndexRules `protobuf:"bytes,10,opt,name=uniqueIndex,proto3,oneof"`
}

type Rules_Index struct {
	Index *IndexRules `protobuf:"bytes,11,opt,name=index,proto3,oneof"`
}

func (*Rules_PrimaryKey) isRules_Idx() {}

func (*Rules_UniqueIndex) isRules_Idx() {}

func (*Rules_Index) isRules_Idx() {}

type BoolRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Default *bool `protobuf:"varint,1,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *BoolRules) Reset() {
	*x = BoolRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolRules) ProtoMessage() {}

func (x *BoolRules) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolRules.ProtoReflect.Descriptor instead.
func (*BoolRules) Descriptor() ([]byte, []int) {
	return file_gorm_proto_rawDescGZIP(), []int{1}
}

func (x *BoolRules) GetDefault() bool {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return false
}

type IntRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    *IntType `protobuf:"varint,1,opt,name=type,proto3,enum=gorm.IntType,oneof" json:"type,omitempty"` // int, bigint, mediumint, smallint, tinyint
	Default *int32   `protobuf:"varint,2,opt,name=default,proto3,oneof" json:"default,omitempty"`
	Width   *uint32  `protobuf:"varint,3,opt,name=width,proto3,oneof" json:"width,omitempty"` // int(11), 11 is width
	Size    *uint32  `protobuf:"varint,4,opt,name=size,proto3,oneof" json:"size,omitempty"`
}

func (x *IntRules) Reset() {
	*x = IntRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntRules) ProtoMessage() {}

func (x *IntRules) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntRules.ProtoReflect.Descriptor instead.
func (*IntRules) Descriptor() ([]byte, []int) {
	return file_gorm_proto_rawDescGZIP(), []int{2}
}

func (x *IntRules) GetType() IntType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return IntType_tinyint
}

func (x *IntRules) GetDefault() int32 {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return 0
}

func (x *IntRules) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *IntRules) GetSize() uint32 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

type FloatRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      *FloatType     `protobuf:"varint,1,opt,name=type,proto3,enum=gorm.FloatType,oneof" json:"type,omitempty"` // float, double, decimal
	Default   *float64       `protobuf:"fixed64,2,opt,name=default,proto3,oneof" json:"default,omitempty"`
	Precision *PrecisionRule `protobuf:"bytes,3,opt,name=precision,proto3,oneof" json:"precision,omitempty"` // float(10, 2), 10 is m，2 is d
	Unsigned  *bool          `protobuf:"varint,4,opt,name=unsigned,proto3,oneof" json:"unsigned,omitempty"`
}

func (x *FloatRules) Reset() {
	*x = FloatRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FloatRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FloatRules) ProtoMessage() {}

func (x *FloatRules) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FloatRules.ProtoReflect.Descriptor instead.
func (*FloatRules) Descriptor() ([]byte, []int) {
	return file_gorm_proto_rawDescGZIP(), []int{3}
}

func (x *FloatRules) GetType() FloatType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return FloatType_float
}

func (x *FloatRules) GetDefault() float64 {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return 0
}

func (x *FloatRules) GetPrecision() *PrecisionRule {
	if x != nil {
		return x.Precision
	}
	return nil
}

func (x *FloatRules) GetUnsigned() bool {
	if x != nil && x.Unsigned != nil {
		return *x.Unsigned
	}
	return false
}

type PrecisionRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	M *uint32 `protobuf:"varint,1,opt,name=m,proto3,oneof" json:"m,omitempty"` // 可以使用的数字位数
	D *uint32 `protobuf:"varint,2,opt,name=d,proto3,oneof" json:"d,omitempty"` // 小数位数
}

func (x *PrecisionRule) Reset() {
	*x = PrecisionRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrecisionRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrecisionRule) ProtoMessage() {}

func (x *PrecisionRule) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrecisionRule.ProtoReflect.Descriptor instead.
func (*PrecisionRule) Descriptor() ([]byte, []int) {
	return file_gorm_proto_rawDescGZIP(), []int{4}
}

func (x *PrecisionRule) GetM() uint32 {
	if x != nil && x.M != nil {
		return *x.M
	}
	return 0
}

func (x *PrecisionRule) GetD() uint32 {
	if x != nil && x.D != nil {
		return *x.D
	}
	return 0
}

type TimeRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           *TimeType `protobuf:"varint,1,opt,name=type,proto3,enum=gorm.TimeType,oneof" json:"type,omitempty"` // datetime, date, timestamp
	AutoCreateTime *bool     `protobuf:"varint,2,opt,name=auto_create_time,json=autoCreateTime,proto3,oneof" json:"auto_create_time,omitempty"`
	AutoUpdateTime *bool     `protobuf:"varint,3,opt,name=auto_update_time,json=autoUpdateTime,proto3,oneof" json:"auto_update_time,omitempty"`
	DeletedAt      *bool     `protobuf:"varint,4,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
	TimeUnit       *TimeUnit `protobuf:"varint,5,opt,name=time_unit,json=timeUnit,proto3,enum=gorm.TimeUnit,oneof" json:"time_unit,omitempty"`
}

func (x *TimeRules) Reset() {
	*x = TimeRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRules) ProtoMessage() {}

func (x *TimeRules) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRules.ProtoReflect.Descriptor instead.
func (*TimeRules) Descriptor() ([]byte, []int) {
	return file_gorm_proto_rawDescGZIP(), []int{5}
}

func (x *TimeRules) GetType() TimeType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return TimeType_datetime
}

func (x *TimeRules) GetAutoCreateTime() bool {
	if x != nil && x.AutoCreateTime != nil {
		return *x.AutoCreateTime
	}
	return false
}

func (x *TimeRules) GetAutoUpdateTime() bool {
	if x != nil && x.AutoUpdateTime != nil {
		return *x.AutoUpdateTime
	}
	return false
}

func (x *TimeRules) GetDeletedAt() bool {
	if x != nil && x.DeletedAt != nil {
		return *x.DeletedAt
	}
	return false
}

func (x *TimeRules) GetTimeUnit() TimeUnit {
	if x != nil && x.TimeUnit != nil {
		return *x.TimeUnit
	}
	return TimeUnit_s
}

type BinaryRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        *BinaryType `protobuf:"varint,1,opt,name=type,proto3,enum=gorm.BinaryType,oneof" json:"type,omitempty"` // binary, varbinary, tinyblob, blob, mediumblob, longblob
	BinaryWidth *uint32     `protobuf:"varint,2,opt,name=binary_width,json=binaryWidth,proto3,oneof" json:"binary_width,omitempty"`
	Size        *uint32     `protobuf:"varint,3,opt,name=size,proto3,oneof" json:"size,omitempty"`
	Default     []byte      `protobuf:"bytes,4,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *BinaryRules) Reset() {
	*x = BinaryRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BinaryRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinaryRules) ProtoMessage() {}

func (x *BinaryRules) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinaryRules.ProtoReflect.Descriptor instead.
func (*BinaryRules) Descriptor() ([]byte, []int) {
	return file_gorm_proto_rawDescGZIP(), []int{6}
}

func (x *BinaryRules) GetType() BinaryType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return BinaryType_binary
}

func (x *BinaryRules) GetBinaryWidth() uint32 {
	if x != nil && x.BinaryWidth != nil {
		return *x.BinaryWidth
	}
	return 0
}

func (x *BinaryRules) GetSize() uint32 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *BinaryRules) GetDefault() []byte {
	if x != nil {
		return x.Default
	}
	return nil
}

type StringRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      *StringType `protobuf:"varint,1,opt,name=type,proto3,enum=gorm.StringType,oneof" json:"type,omitempty"` // char, varchar, tinytext, text, mediumtext, longtext
	CharWidth *uint32     `protobuf:"varint,2,opt,name=char_width,json=charWidth,proto3,oneof" json:"char_width,omitempty"`
	Size      *uint32     `protobuf:"varint,3,opt,name=size,proto3,oneof" json:"size,omitempty"`
	Default   *string     `protobuf:"bytes,4,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *StringRules) Reset() {
	*x = StringRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringRules) ProtoMessage() {}

func (x *StringRules) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringRules.ProtoReflect.Descriptor instead.
func (*StringRules) Descriptor() ([]byte, []int) {
	return file_gorm_proto_rawDescGZIP(), []int{7}
}

func (x *StringRules) GetType() StringType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return StringType_char
}

func (x *StringRules) GetCharWidth() uint32 {
	if x != nil && x.CharWidth != nil {
		return *x.CharWidth
	}
	return 0
}

func (x *StringRules) GetSize() uint32 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *StringRules) GetDefault() string {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return ""
}

type EnumStrings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *EnumStrings) Reset() {
	*x = EnumStrings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumStrings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumStrings) ProtoMessage() {}

func (x *EnumStrings) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumStrings.ProtoReflect.Descriptor instead.
func (*EnumStrings) Descriptor() ([]byte, []int) {
	return file_gorm_proto_rawDescGZIP(), []int{8}
}

func (x *EnumStrings) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type EnumInt32S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []int32 `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *EnumInt32S) Reset() {
	*x = EnumInt32S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumInt32S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumInt32S) ProtoMessage() {}

func (x *EnumInt32S) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumInt32S.ProtoReflect.Descriptor instead.
func (*EnumInt32S) Descriptor() ([]byte, []int) {
	return file_gorm_proto_rawDescGZIP(), []int{9}
}

func (x *EnumInt32S) GetValues() []int32 {
	if x != nil {
		return x.Values
	}
	return nil
}

type EnumRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       *EnumType `protobuf:"varint,1,opt,name=type,proto3,enum=gorm.EnumType,oneof" json:"type,omitempty"` // enum, int32, string
	EnumValues []string  `protobuf:"bytes,2,rep,name=enum_values,json=enumValues,proto3" json:"enum_values,omitempty"`
	// Types that are assignable to Default:
	//	*EnumRules_StringDefault
	//	*EnumRules_IntDefault
	Default isEnumRules_Default `protobuf_oneof:"default"`
}

func (x *EnumRules) Reset() {
	*x = EnumRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumRules) ProtoMessage() {}

func (x *EnumRules) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumRules.ProtoReflect.Descriptor instead.
func (*EnumRules) Descriptor() ([]byte, []int) {
	return file_gorm_proto_rawDescGZIP(), []int{10}
}

func (x *EnumRules) GetType() EnumType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return EnumType_enum
}

func (x *EnumRules) GetEnumValues() []string {
	if x != nil {
		return x.EnumValues
	}
	return nil
}

func (m *EnumRules) GetDefault() isEnumRules_Default {
	if m != nil {
		return m.Default
	}
	return nil
}

func (x *EnumRules) GetStringDefault() string {
	if x, ok := x.GetDefault().(*EnumRules_StringDefault); ok {
		return x.StringDefault
	}
	return ""
}

func (x *EnumRules) GetIntDefault() int32 {
	if x, ok := x.GetDefault().(*EnumRules_IntDefault); ok {
		return x.IntDefault
	}
	return 0
}

type isEnumRules_Default interface {
	isEnumRules_Default()
}

type EnumRules_StringDefault struct {
	StringDefault string `protobuf:"bytes,3,opt,name=string_default,json=stringDefault,proto3,oneof"`
}

type EnumRules_IntDefault struct {
	IntDefault int32 `protobuf:"varint,4,opt,name=int_default,json=intDefault,proto3,oneof"`
}

func (*EnumRules_StringDefault) isEnumRules_Default() {}

func (*EnumRules_IntDefault) isEnumRules_Default() {}

type IndexRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Unique   *bool   `protobuf:"varint,2,opt,name=unique,proto3,oneof" json:"unique,omitempty"`
	Priority uint32  `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *IndexRules) Reset() {
	*x = IndexRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRules) ProtoMessage() {}

func (x *IndexRules) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRules.ProtoReflect.Descriptor instead.
func (*IndexRules) Descriptor() ([]byte, []int) {
	return file_gorm_proto_rawDescGZIP(), []int{11}
}

func (x *IndexRules) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *IndexRules) GetUnique() bool {
	if x != nil && x.Unique != nil {
		return *x.Unique
	}
	return false
}

func (x *IndexRules) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

var file_gorm_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptor.MessageOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         50000,
		Name:          "gorm.set_table",
		Tag:           "varint,50000,opt,name=set_table",
		Filename:      "gorm.proto",
	},
	{
		ExtendedType:  (*descriptor.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50001,
		Name:          "gorm.table_name",
		Tag:           "bytes,50001,opt,name=table_name",
		Filename:      "gorm.proto",
	},
	{
		ExtendedType:  (*descriptor.MessageOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         50002,
		Name:          "gorm.disable_snake_case",
		Tag:           "varint,50002,opt,name=disable_snake_case",
		Filename:      "gorm.proto",
	},
	{
		ExtendedType:  (*descriptor.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         50000,
		Name:          "gorm.ignore_gorm_column",
		Tag:           "varint,50000,opt,name=ignore_gorm_column",
		Filename:      "gorm.proto",
	},
	{
		ExtendedType:  (*descriptor.FieldOptions)(nil),
		ExtensionType: (*Rules)(nil),
		Field:         50001,
		Name:          "gorm.rules",
		Tag:           "bytes,50001,opt,name=rules",
		Filename:      "gorm.proto",
	},
}

// Extension fields to descriptor.MessageOptions.
var (
	// optional bool set_table = 50000;
	E_SetTable = &file_gorm_proto_extTypes[0]
	// optional string table_name = 50001;
	E_TableName = &file_gorm_proto_extTypes[1]
	// optional bool disable_snake_case = 50002;
	E_DisableSnakeCase = &file_gorm_proto_extTypes[2]
)

// Extension fields to descriptor.FieldOptions.
var (
	// optional bool ignore_gorm_column = 50000;
	E_IgnoreGormColumn = &file_gorm_proto_extTypes[3]
	// optional gorm.Rules rules = 50001;
	E_Rules = &file_gorm_proto_extTypes[4]
)

var File_gorm_proto protoreflect.FileDescriptor

var file_gorm_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x6f,
	0x72, 0x6d, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99, 0x04, 0x0a, 0x05, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x24,
	0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x22, 0x0a, 0x03, 0x69,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e,
	0x49, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x48, 0x00, 0x52, 0x03, 0x69, 0x6e, 0x74, 0x12,
	0x28, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x48, 0x00, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x48, 0x00, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x2b, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x48, 0x00, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x2b, 0x0a,
	0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x0a, 0x04, 0x65, 0x6e,
	0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e,
	0x45, 0x6e, 0x75, 0x6d, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x48, 0x00, 0x52, 0x04, 0x65, 0x6e, 0x75,
	0x6d, 0x12, 0x21, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x4b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x0b, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6f, 0x72, 0x6d,
	0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x48, 0x01, 0x52, 0x0b, 0x75,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6f, 0x72, 0x6d,
	0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x48, 0x01, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x5f, 0x6e, 0x75, 0x6c, 0x6c,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x74, 0x4e, 0x75, 0x6c,
	0x6c, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x05, 0x0a, 0x03,
	0x69, 0x64, 0x78, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x6e, 0x75, 0x6c, 0x6c,
	0x22, 0x36, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a,
	0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00,
	0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0xad, 0x01, 0x0a, 0x08, 0x49, 0x6e, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x49, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x48, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a,
	0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01,
	0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xde, 0x01, 0x0a, 0x0a, 0x46, 0x6c, 0x6f,
	0x61, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x46, 0x6c, 0x6f,
	0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x01, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x36, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x50, 0x72, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x48, 0x02, 0x52, 0x09, 0x70, 0x72, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x75, 0x6e, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x08, 0x75, 0x6e,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x22, 0x41, 0x0a, 0x0d, 0x50, 0x72, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x11, 0x0a, 0x01, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x01, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x11, 0x0a,
	0x01, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x01, 0x64, 0x88, 0x01, 0x01,
	0x42, 0x04, 0x0a, 0x02, 0x5f, 0x6d, 0x42, 0x04, 0x0a, 0x02, 0x5f, 0x64, 0x22, 0xb8, 0x02, 0x0a,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52,
	0x0e, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x0e,
	0x61, 0x75, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e,
	0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x48, 0x04, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65,
	0x55, 0x6e, 0x69, 0x74, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x42, 0x13, 0x0a, 0x11, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x22, 0xc7, 0x01, 0x0a, 0x0b, 0x42, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x42, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x0b, 0x62, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x57, 0x69, 0x64, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x03, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x22, 0xc1, 0x01, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x48, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x72, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x57, 0x69, 0x64, 0x74, 0x68, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x25, 0x0a, 0x0b, 0x45, 0x6e, 0x75, 0x6d, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x24, 0x0a, 0x0a,
	0x45, 0x6e, 0x75, 0x6d, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x09, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x48, 0x01,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x75,
	0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0e, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x72, 0x0a, 0x0a, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x01, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x2a, 0x48,
	0x0a, 0x07, 0x49, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x74, 0x69, 0x6e,
	0x79, 0x69, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x69,
	0x6e, 0x74, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x69, 0x6e,
	0x74, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x69, 0x6e, 0x74, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06,
	0x62, 0x69, 0x67, 0x69, 0x6e, 0x74, 0x10, 0x04, 0x2a, 0x2f, 0x0a, 0x09, 0x46, 0x6c, 0x6f, 0x61,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x10, 0x02, 0x2a, 0x31, 0x0a, 0x08, 0x54, 0x69, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x10, 0x02, 0x2a, 0x5d, 0x0a, 0x0a,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x62, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x62, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x74, 0x69, 0x6e, 0x79, 0x62, 0x6c, 0x6f,
	0x62, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x62, 0x6c, 0x6f, 0x62, 0x10, 0x03, 0x12, 0x0e, 0x0a,
	0x0a, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x62, 0x6c, 0x6f, 0x62, 0x10, 0x04, 0x12, 0x0c, 0x0a,
	0x08, 0x6c, 0x6f, 0x6e, 0x67, 0x62, 0x6c, 0x6f, 0x62, 0x10, 0x05, 0x2a, 0x59, 0x0a, 0x0a, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x63, 0x68, 0x61,
	0x72, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x74, 0x69, 0x6e, 0x79, 0x74, 0x65, 0x78, 0x74, 0x10, 0x02, 0x12, 0x08,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69,
	0x75, 0x6d, 0x74, 0x65, 0x78, 0x74, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x6c, 0x6f, 0x6e, 0x67,
	0x74, 0x65, 0x78, 0x74, 0x10, 0x05, 0x2a, 0x2b, 0x0a, 0x08, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x10, 0x02, 0x2a, 0x29, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x05, 0x0a, 0x01, 0x73, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x6d, 0x73, 0x10, 0x01, 0x12, 0x06,
	0x0a, 0x02, 0x75, 0x73, 0x10, 0x02, 0x12, 0x06, 0x0a, 0x02, 0x6e, 0x73, 0x10, 0x03, 0x3a, 0x41,
	0x0a, 0x09, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd0, 0x86, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x88, 0x01,
	0x01, 0x3a, 0x43, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xd1, 0x86, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x3a, 0x52, 0x0a, 0x12, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x12, 0x1f, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd2, 0x86,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x6e,
	0x61, 0x6b, 0x65, 0x43, 0x61, 0x73, 0x65, 0x88, 0x01, 0x01, 0x3a, 0x50, 0x0a, 0x12, 0x69, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x67, 0x6f, 0x72, 0x6d, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xd0, 0x86, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x47,
	0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x88, 0x01, 0x01, 0x3a, 0x45, 0x0a, 0x05,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd1, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x67,
	0x6f, 0x72, 0x6d, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73,
	0x88, 0x01, 0x01, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x49, 0x67, 0x75, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x72, 0x6d, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gorm_proto_rawDescOnce sync.Once
	file_gorm_proto_rawDescData = file_gorm_proto_rawDesc
)

func file_gorm_proto_rawDescGZIP() []byte {
	file_gorm_proto_rawDescOnce.Do(func() {
		file_gorm_proto_rawDescData = protoimpl.X.CompressGZIP(file_gorm_proto_rawDescData)
	})
	return file_gorm_proto_rawDescData
}

var file_gorm_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_gorm_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_gorm_proto_goTypes = []interface{}{
	(IntType)(0),                      // 0: gorm.IntType
	(FloatType)(0),                    // 1: gorm.FloatType
	(TimeType)(0),                     // 2: gorm.TimeType
	(BinaryType)(0),                   // 3: gorm.BinaryType
	(StringType)(0),                   // 4: gorm.StringType
	(EnumType)(0),                     // 5: gorm.EnumType
	(TimeUnit)(0),                     // 6: gorm.TimeUnit
	(*Rules)(nil),                     // 7: gorm.Rules
	(*BoolRules)(nil),                 // 8: gorm.BoolRules
	(*IntRules)(nil),                  // 9: gorm.IntRules
	(*FloatRules)(nil),                // 10: gorm.FloatRules
	(*PrecisionRule)(nil),             // 11: gorm.PrecisionRule
	(*TimeRules)(nil),                 // 12: gorm.TimeRules
	(*BinaryRules)(nil),               // 13: gorm.BinaryRules
	(*StringRules)(nil),               // 14: gorm.StringRules
	(*EnumStrings)(nil),               // 15: gorm.EnumStrings
	(*EnumInt32S)(nil),                // 16: gorm.EnumInt32s
	(*EnumRules)(nil),                 // 17: gorm.EnumRules
	(*IndexRules)(nil),                // 18: gorm.IndexRules
	(*descriptor.MessageOptions)(nil), // 19: google.protobuf.MessageOptions
	(*descriptor.FieldOptions)(nil),   // 20: google.protobuf.FieldOptions
}
var file_gorm_proto_depIdxs = []int32{
	8,  // 0: gorm.Rules.bool:type_name -> gorm.BoolRules
	9,  // 1: gorm.Rules.int:type_name -> gorm.IntRules
	10, // 2: gorm.Rules.float:type_name -> gorm.FloatRules
	12, // 3: gorm.Rules.time:type_name -> gorm.TimeRules
	13, // 4: gorm.Rules.binary:type_name -> gorm.BinaryRules
	14, // 5: gorm.Rules.string:type_name -> gorm.StringRules
	17, // 6: gorm.Rules.enum:type_name -> gorm.EnumRules
	18, // 7: gorm.Rules.uniqueIndex:type_name -> gorm.IndexRules
	18, // 8: gorm.Rules.index:type_name -> gorm.IndexRules
	0,  // 9: gorm.IntRules.type:type_name -> gorm.IntType
	1,  // 10: gorm.FloatRules.type:type_name -> gorm.FloatType
	11, // 11: gorm.FloatRules.precision:type_name -> gorm.PrecisionRule
	2,  // 12: gorm.TimeRules.type:type_name -> gorm.TimeType
	6,  // 13: gorm.TimeRules.time_unit:type_name -> gorm.TimeUnit
	3,  // 14: gorm.BinaryRules.type:type_name -> gorm.BinaryType
	4,  // 15: gorm.StringRules.type:type_name -> gorm.StringType
	5,  // 16: gorm.EnumRules.type:type_name -> gorm.EnumType
	19, // 17: gorm.set_table:extendee -> google.protobuf.MessageOptions
	19, // 18: gorm.table_name:extendee -> google.protobuf.MessageOptions
	19, // 19: gorm.disable_snake_case:extendee -> google.protobuf.MessageOptions
	20, // 20: gorm.ignore_gorm_column:extendee -> google.protobuf.FieldOptions
	20, // 21: gorm.rules:extendee -> google.protobuf.FieldOptions
	7,  // 22: gorm.rules:type_name -> gorm.Rules
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	22, // [22:23] is the sub-list for extension type_name
	17, // [17:22] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_gorm_proto_init() }
func file_gorm_proto_init() {
	if File_gorm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gorm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FloatRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrecisionRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BinaryRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumStrings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumInt32S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_gorm_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Rules_Bool)(nil),
		(*Rules_Int)(nil),
		(*Rules_Float)(nil),
		(*Rules_Time)(nil),
		(*Rules_Binary)(nil),
		(*Rules_String_)(nil),
		(*Rules_Enum)(nil),
		(*Rules_PrimaryKey)(nil),
		(*Rules_UniqueIndex)(nil),
		(*Rules_Index)(nil),
	}
	file_gorm_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_gorm_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_gorm_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_gorm_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_gorm_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_gorm_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_gorm_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_gorm_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*EnumRules_StringDefault)(nil),
		(*EnumRules_IntDefault)(nil),
	}
	file_gorm_proto_msgTypes[11].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gorm_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   12,
			NumExtensions: 5,
			NumServices:   0,
		},
		GoTypes:           file_gorm_proto_goTypes,
		DependencyIndexes: file_gorm_proto_depIdxs,
		EnumInfos:         file_gorm_proto_enumTypes,
		MessageInfos:      file_gorm_proto_msgTypes,
		ExtensionInfos:    file_gorm_proto_extTypes,
	}.Build()
	File_gorm_proto = out.File
	file_gorm_proto_rawDesc = nil
	file_gorm_proto_goTypes = nil
	file_gorm_proto_depIdxs = nil
}
